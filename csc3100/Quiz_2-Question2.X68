*-----------------------------------------------------------
* Title      : QUIZ 2 QUESTION 2
* Written by : CALEB LATIMER 
* Date       : 12/4/2016
* Description: NEGATIVE NUMBERS AND RESULTS 
*-----------------------------------------------------------
    ORG    $1000
    ;COUNTER = D3 COMMACOUNTER = D4
START:                  ; first instruction of program

* Put program code here
    MOVE.B #0,D3 ; STARTS COUNTER AT 0 
    MOVE.B #0,D4 ; STARTS COMMA COUNTER AT 0 
    LEA PROMPT, A1 ; PROMPT USER TO INPUT A NUMBER 
    MOVE #14,D0
    TRAP #15
    
    MOVE #4,D0 ; STORES USER'S INPUT INTO D1 
    TRAP #15 
    
    CMP #0,D1   ; COMPARES WITH 0 TO DETERMINE IF INPUT WAS POSITIVE OR NEGATIVE 
    BLT NEGATIVE 
    BGE POSITIVE
    
NEGATIVE
    LEA NEGPROMPT, A1 ; VERIFY NEGATIVE PATH, PRINTING ODDS
    MOVE #14,D0
    TRAP #15
    
    LEA ARR,A2 ; LOAD UP ARRAY 
    LEA COMMA,A1 ; LOAD UP THE COMMA CHARACTER
    CLR.L D1 ; CLEAR D1
    BRA NEGSCAN
    
NEGSCAN 
    MOVE.B (A2)+,D1 ; LOOP TO PRINT EVERY ODD VALUE 
    MOVE.B D1,D2
    AND #1, D2
    BNE NEGPRINT
    BEQ NEGINCREMENT
 
NEGPRINT 
    MOVE #3,D0 ; PRINTS VALUE 
    TRAP #15
 
    BRA NCOMMACOUNTER   ; MOVE TO BRANCH TO DECIDE IF A COMMA IS NEEDED 
 
NEGINCREMENT
    ADD.B #1,D3 ; COUNTER FOR ARRAY STOP LOOP ONCE ENTIRE ARRAY HAS BEEN SCANNED 
    CMP #7,D3
    BNE NEGSCAN
    BEQ ENDOFP 
 
NCOMMACOUNTER 
    CMP #3,D4 ; CHECKS TO SEE IF ALL NEEDED COMMAS HAVE BEEN PRINTED YET, IF THEY HAVE THEN DON'T PRINT COMMA AND GO BACK TO THE MAIN LOOP 
    BNE NCOMMAPRINT
    BEQ NEGINCREMENT 
    
NCOMMAPRINT
    MOVE #14,D0 ; PRINT COMMA 
    TRAP #15
    BRA NCOMMAINCREMENT 
    
NCOMMAINCREMENT 
    ADD.B #1,D4 ; INCREMENT COMMA COUNTER AND RETURN TO MAIN LOOP 
    BRA NEGINCREMENT 
 
POSITIVE
    LEA POSPROMPT, A1 ; VERIFY POSITIVE PATH
    MOVE #14,D0
    TRAP #15
    
    LEA ARR,A2 ; LOAD UP ARRAY 
    LEA COMMA,A1 ; LOAD UP THE COMMA CHARACTER
    CLR.L D1 ; CLEAR D1
    BRA POSSCAN
    
POSSCAN 
    MOVE.B (A2)+,D1 ; LOOP TO PRINT EVERY EVEN VALUE 
    MOVE.B D1,D2
    AND #1, D2
    BEQ POSPRINT
    BNE POSINCREMENT
 
POSPRINT 
    MOVE #3,D0 ; PRINTS VALUE 
    TRAP #15
 
    BRA PCOMMACOUNTER   ; MOVE TO BRANCH TO DECIDE IF A COMMA IS NEEDED 
 
POSINCREMENT
    ADD.B #1,D3 ; COUNTER FOR ARRAY STOP LOOP ONCE ENTIRE ARRAY HAS BEEN SCANNED 
    CMP #7,D3
    BNE POSSCAN
    BEQ ENDOFP 
 
PCOMMACOUNTER 
    CMP #2,D4 ; CHECKS TO SEE IF ALL NEEDED COMMAS HAVE BEEN PRINTED YET, IF THEY HAVE THEN DON'T PRINT COMMA AND GO BACK TO THE MAIN LOOP 
    BNE PCOMMAPRINT
    BEQ POSINCREMENT 
    
PCOMMAPRINT
    MOVE #14,D0 ; PRINT COMMA 
    TRAP #15
    BRA PCOMMAINCREMENT 
    
PCOMMAINCREMENT 
    ADD.B #1,D4 ; INCREMENT COMMA COUNTER AND RETURN TO MAIN LOOP 
    BRA POSINCREMENT
    
ENDOFP ; BRANCH FOR END OF PROGRAM TO PREVENT OVERLAP 


    SIMHALT             ; halt simulator

* Put variables and constants here
COMMA DC.B ', ',0
ARR DC.B 1, 7, 13, 0, 11, 24, 8 
PROMPT DC.B 'Please input a number: ',0 
NEGPROMPT DC.B 'Your input was negative: ',0
POSPROMPT DC.B 'Your input was positive: ',0 

    END    START        ; last line of source

*~Font name~Courier New~
*~Font size~10~
*~Tab type~1~
*~Tab size~4~
